name: demo-docker

services:
  mysql:
    image: groonga/mroonga:mysql-8.0-latest
    container_name: demo-mysql
    restart: always
    networks:
      - demo-network
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      TZ: ${MYSQL_TIME_ZONE}
    ports:
      - ${MYSQL_HOST_PORT}:${MYSQL_CONTAINER_PORT}
    #volumes:
      #- ./mysql/data:/var/lib/mysql
      #- ./mysql/conf.d:/etc/mysql/conf.d
      #- ./mysql/log:/var/log/mysql
  redis:
    image: redis:6
    container_name: demo-redis
    restart: always
    networks:
      - demo-network
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - ${REDIS_HOST_PORT}:${REDIS_CONTAINER_PORT}
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}" ]
    #volumes:
      #- ./redis/data:/data
      #- ./redis/conf/redis.conf:/usr/local/etc/redis/redis.conf
  dbgate:
    image: dbgate/dbgate:latest
    container_name: demo-dbgate
    restart: always
    networks:
      - demo-network
    ports:
      - ${DBGATE_HOST_PORT}:${DBGATE_CONTAINER_PORT}
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.17.10
    container_name: demo-elasticsearch
    restart: always
    networks:
      - demo-network
    environment:
      - "xpack.security.http.ssl.enabled=false"
      - "ELASTIC_PASSWORD=${ELASTIC_PASSWORD}"
      - "discovery.type=single-node"
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
    ports:
      - ${ELASTICSEARCH_REST_HOST_PORT}:${ELASTICSEARCH_REST_CONTAINER_PORT}
      - ${ELASTICSEARCH_TRANSPORT_HOST_PORT}:${ELASTICSEARCH_TRANSPORT_CONTAINER_PORT}
    volumes:
      #- ./elasticsearch/data:/usr/share/elasticsearch/data
      - ./elasticsearch/config/dict:/usr/share/elasticsearch/config/dict
      #- ./elasticsearch/logs:/usr/share/elasticsearch/logs
  kibana:
    image: docker.elastic.co/kibana/kibana:8.17.10
    container_name: demo-kibana
    depends_on:
      - elasticsearch
    restart: always
    networks:
      - demo-network
    environment:
      ELASTICSEARCH_HOSTS: ${KIBANA_ELASTICSEARCH_HOSTS}
      ELASTICSEARCH_SERVICEACCOUNTTOKEN: ${KIBANA_ELASTICSEARCH_SERVICEACCOUNTTOKEN}
    ports:
      - ${KIBANA_HOST_PORT}:${KIBANA_CONTAINER_PORT}

networks:
  demo-network:
    driver: bridge